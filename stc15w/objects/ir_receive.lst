C51 COMPILER V9.52.0.0   IR_RECEIVE                                                        02/22/2019 20:06:03 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE IR_RECEIVE
OBJECT MODULE PLACED IN .\objects\ir_receive.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE IR\ir_receive.c LARGE BROWSE INCDIR(.\eeprom;.\IR;.\uart;.\delay;.\buzzer;.
                    -\rtc;.\pw_switch;.\time2) DEBUG OBJECTEXTEND PRINT(.\objects\ir_receive.lst) TABS(2) OBJECT(.\objects\ir_receive.obj)

line level    source

   1          #include "ir.h"
   2          
   3          #define SysTick     10000       // 次/秒, 系统滴答频率, 在4000~16000之间
   4          
   5          
   6          /****************************** 自动定义宏 ***********************************/
   7          
   8          #define Timer0_Reload   (65536UL - ((MAIN_Fosc + SysTick/2) / SysTick))     //Timer 0 中断频率, 在config.h
             -中指定系统滴答频率, 在4000~16000之间.
   9          
  10          /*****************************************************************************/
  11          bit B_1ms;          //1ms标志
  12          
  13          unsigned char  cnt_1ms;        //1ms基本计时
  14          
  15          
  16          /*************  红外接收程序变量声明    **************/
  17          sbit    P_IR_RX = P3^3;         //定义红外接收输入IO口
  18          
  19          bit P_IR_RX_temp;       //Last sample
  20          bit B_IR_Sync;          //已收到同步标志
  21          bit B_IR_Press;         //安键动作发生
  22          
  23          
  24          unsigned char  IR_SampleCnt;       //采样计数
  25          unsigned char  IR_BitCnt;          //编码位数
  26          unsigned char  IR_UserH;           //用户码(地址)高字节
  27          unsigned char  IR_UserL;           //用户码(地址)低字节
  28          unsigned char  IR_data;            //数据原码
  29          unsigned char  IR_DataShit;        //数据移位
  30          
  31          
  32          unsigned char  IR_code;            //红外键码
  33          unsigned int   UserCode;           //用户码
  34          
  35          
  36          
  37          
  38          
  39          /******************************************
  40          *函数名称：timer0_init
  41          *输入参数：无
  42          *输出参数：无
  43          *函数功能：定时器0初始化函数
  44          *备    注：
  45          *******************************************/
  46          void timer0_init (void) 
  47          {
  48   1          AUXR = 0x80;                       //Timer0 set as 1T, 16 bits timer auto-reload, 
  49   1          TH0 = (unsigned char)(Timer0_Reload / 256);
  50   1          TL0 = (unsigned char)(Timer0_Reload % 256);
  51   1          ET0 = 1;                           //Timer0 interrupt enable
  52   1          TR0 = 1;                           //Tiner0 run
  53   1      
C51 COMPILER V9.52.0.0   IR_RECEIVE                                                        02/22/2019 20:06:03 PAGE 2   

  54   1          cnt_1ms = SysTick / 1000;
  55   1          EA = 1;                           //打开总中断
  56   1       
  57   1      }
  58          
  59          //*******************************************************************
  60          //*********************** IR Remote Module **************************
  61          //*********************** By  (Coody) 2002-8-24 *********************
  62          //*********************** IR Remote Module **************************
  63          //this programme is used for Receive IR Remote (NEC Code).
  64          
  65          //data format: Synchro, AddressH, AddressL, data, /data, (total 32 bit).
  66          
  67          //send a frame(85ms), pause 23ms, send synchro of continue frame, pause 94ms
  68          
  69          //data rate: 108ms/Frame
  70          
  71          
  72          //Synchro: low=9ms, high=4.5 / 2.25ms, low=0.5626ms
  73          //Bit0: high=0.5626ms, low=0.5626ms
  74          //Bit1: high=1.6879ms, low=0.5626ms
  75          //frame rate = 108ms ( pause 23 ms or 96 ms)
  76          
  77          /******************** 红外采样时间宏定义, 用户不要随意修改  *******************/
  78          
  79          #define IR_SAMPLE_TIME      (1000000UL/SysTick)         //查询时间间隔, us, 红外接收要求在60us~250us之间
  80          #if ((IR_SAMPLE_TIME <= 250) && (IR_SAMPLE_TIME >= 60))
  81              #define D_IR_sample         IR_SAMPLE_TIME      //定义采样时间，在60us~250us之间
  82          #endif
  83          
  84          #define D_IR_SYNC_MAX       (15000/D_IR_sample) //SYNC max time
  85          #define D_IR_SYNC_MIN       (9700 /D_IR_sample) //SYNC min time
  86          #define D_IR_SYNC_DIVIDE    (12375/D_IR_sample) //decide data 0 or 1
  87          #define D_IR_DATA_MAX       (3000 /D_IR_sample) //data max time
  88          #define D_IR_DATA_MIN       (600  /D_IR_sample) //data min time
  89          #define D_IR_DATA_DIVIDE    (1687 /D_IR_sample) //decide data 0 or 1
  90          #define D_IR_BIT_NUMBER     32                  //bit number
  91          //*******************************************************************************************
  92          //**************************** IR RECEIVE MODULE ********************************************
  93          /******************************************
  94          *函数名称：IR_RX_NEC
  95          *输入参数：无
  96          *输出参数：无
  97          *函数功能：红外接收函数
  98          *备    注：
  99          *******************************************/
 100          void IR_RX_NEC(void)
 101          {
 102   1          unsigned char SampleTime;
 103   1      
 104   1          IR_SampleCnt++;                         //Sample + 1
 105   1      
 106   1          F0 = P_IR_RX_temp;                      //Save Last sample status
 107   1          P_IR_RX_temp = P_IR_RX;                 //Read current status
 108   1          if(F0 && !P_IR_RX_temp)                 //Pre-sample is high，and current sample is low, so is fall ed
             -ge
 109   1          {
 110   2              SampleTime = IR_SampleCnt;          //get the sample time
 111   2              IR_SampleCnt = 0;                   //Clear the sample counter
 112   2      
 113   2              if(SampleTime > D_IR_SYNC_MAX)    
 114   2              {
C51 COMPILER V9.52.0.0   IR_RECEIVE                                                        02/22/2019 20:06:03 PAGE 3   

 115   3      
 116   3                B_IR_Sync = 0;  //large the Maxim SYNC time, then error
 117   3             
 118   3              } 
 119   2              else if(SampleTime >= D_IR_SYNC_MIN)                    //SYNC
 120   2              {
 121   3                  if(SampleTime >= D_IR_SYNC_DIVIDE)
 122   3                  {
 123   4                      B_IR_Sync = 1;                  //has received SYNC
 124   4                      IR_BitCnt = D_IR_BIT_NUMBER;    //Load bit number
 125   4                  }
 126   3              }
 127   2              else if(B_IR_Sync)                      //has received SYNC
 128   2              {
 129   3                  if(SampleTime > D_IR_DATA_MAX)     
 130   3                  {
 131   4                      B_IR_Sync=0;    //data samlpe time too large
 132   4                  }
 133   3                  else
 134   3                  {
 135   4                      IR_DataShit >>= 1;                  //data shift right 1 bit
 136   4                      if(SampleTime >= D_IR_DATA_DIVIDE)  
 137   4                      {
 138   5                        IR_DataShit |= 0x80;    //devide data 0 or 1
 139   5                      }              
 140   4                      if(--IR_BitCnt == 0)                //bit number is over?
 141   4                      {
 142   5                          B_IR_Sync = 0;                  //Clear SYNC
 143   5                          if(~IR_DataShit == IR_data)     //判断数据正反码
 144   5                          {
 145   6                              UserCode = ((unsigned int)IR_UserH << 8) + IR_UserL;
 146   6                              IR_code      = IR_data;
 147   6                              B_IR_Press   = 1;           //数据有效
 148   6                          }
 149   5                      }
 150   4                      else if((IR_BitCnt & 7)== 0)        //one byte receive
 151   4                      {
 152   5                          IR_UserL = IR_UserH;            //Save the User code high byte
 153   5                          IR_UserH = IR_data;             //Save the User code low byte
 154   5                          IR_data  = IR_DataShit;         //Save the IR data byte
 155   5                      }
 156   4                  }
 157   3              }
 158   2          }
 159   1      }
 160          /******************************************
 161          *函数名称：timer0
 162          *输入参数：无
 163          *输出参数：无
 164          *函数功能：定时器0中断函数
 165          *备    注：
 166          *******************************************/
 167          void timer0 (void) interrupt 1
 168          {
 169   1      
 170   1          IR_RX_NEC();
 171   1          if(--cnt_1ms == 0)
 172   1          {
 173   2              cnt_1ms = SysTick / 1000;
 174   2              B_1ms = 1;      //1ms标志
 175   2          }
 176   1      
C51 COMPILER V9.52.0.0   IR_RECEIVE                                                        02/22/2019 20:06:03 PAGE 4   

 177   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    240    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     10    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
